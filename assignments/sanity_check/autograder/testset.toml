[common]
our_makefile = true
visibility = "visible"
kill_limit = 500
max_time = 10

[passing_tests]
tests = [ 
    { testname = "test01", description = "SHOULD PASS: cout hello world" }, # diff-stdout pass
    { testname = "test02", description = "SHOULD PASS: assert(0==0)" },     # exitcode pass (0)
    { testname = "test03", description = "SHOULD PASS: new with free" },    # valgrind pass
    { testname = "test04", description = "SHOULD PASS: cerr hello world" }, # diff stderr pass
    { testname = "test05", description = "SHOULD PASS: exit(1)", exitcodepass=1 }, 
    { testname = "test06", description = "SHOULD PASS: empty canonicalizer stdout", ccizer_name = "do_nothing", ccize_stdout=true },
    { testname = "test07", description = "SHOULD PASS: sort nums canonicalizer stdout", ccizer_name = "sort_num_lines", ccize_stdout=true },
    { testname = "test08", description = "SHOULD PASS: empty canonicalizer stderr", ccizer_name = "do_nothing", ccize_stderr=true },
    { testname = "test09", description = "SHOULD PASS: sort nums canonicalizer stderr", ccizer_name = "sort_num_lines", ccize_stderr=true },
    { testname = "test10", description = "SHOULD PASS: ofile output stream", argv=["${test_ofile_path}.ofile"] },
    { testname = "test11", description = "SHOULD PASS: output nums to ofile and canonicalize", argv=["${test_ofile_path}.ofile"], ccize_ofiles=true, ccizer_name="sort_num_lines" },
    { testname = "test12", description = "SHOULD PASS: output info to multiple ofiles", argv=["${test_ofile_path}.1.ofile", "${test_ofile_path}.2.ofile"] }, 
    { testname = "test13", description = "SHOULD PASS: output to stdout, stderr, and multiple files", argv=["${test_ofile_path}.1.ofile", "${test_ofile_path}.2.ofile"] },
    { testname = "test14", description = "SHOULD PASS: output data from std::cin to std::cout" }
]
[failing_tests]
tests = [
    { testname = "test15", description = "SHOULD FAIL: timeout", max_time = 5},
    { testname = "test16", description = "SHOULD FAIL & PASS VALGRIND: max_ram", max_ram = 1},
    { testname = "test17", description = "SHOULD FAIL: exceed kill limit" },
    { testname = "test18", description = "SHOULD FAIL & PASS VALGRIND: random values to std::cout" },
    { testname = "test19", description = "SHOULD FAIL & PASS VALGRIND: random values to std::cerr" },
    { testname = "test20", description = "SHOULD FAIL & PASS VALGRIND: random values to ofile", argv=["${test_ofile_path}.ofile"] }, 
    { testname = "test21", description = "SHOULD FAIL & PASS VALGRIND: return 1 when 0 expected" } # NOTE! No output is shown in terminal results here. 
]

[valgrind_fail]
tests = [
    { testname = "test22", description = "SHOULD FAIL VALGRIND: memory leak"  }, 
    { testname = "test23", description = "SHOULD FAIL VALGRIND: memory error" }
]

[manual_mode]
exec_command = "python3 ${testname}"
valgrind = false
tests = [
    { testname = "test_pass.py", description = "SHOULD PASS: manual mode" },
    { testname = "test_fail.py", description = "SHOULD FAIL: manual mode" }
]