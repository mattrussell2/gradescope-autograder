[common]
our_makefile = true 
executable   = "SixDegrees"
visibility   = "after_due_date"
max_valgrind_score = 3
valgrind_score_visibility = "after_due_date"
ccize_stdout = true 
ccizer_name = "process_output"
ccizer_args ={ artists_file="artists.txt" }
argv  = ["artists.txt"]

[SixDegrees_tests]
tests = [
    { testname="test07", description="dfs Sia -> David Guetta", visibility = "visible"}, 
    { testname="test08", description="dfs David Guetta -> Sia"}, 
    { testname="test09", description="dfs Slim Thug -> Slim Thug", visibility = "visible"},
    { testname="test10", description="dfs with backtracking", argv=["test10.data"], ccizer_args={artists_file="test10.data"}},
    { testname="test11", description="dfs with adjacent vertices"},
    { testname="test12", description="dfs disconnected graph"},
    { testname="test13", description="dfs artist not in graph"},
    { testname="test14", description="dfs stress test" },
    { testname="test15", description="bfs Ariana Grande -> 50Cent", visibility = "visible" }, 
    { testname="test16", description="bfs 50Cent -> Ariana Grande"},
    { testname="test17", description="bfs Avril Lavigne -> Avril Lavigne" }, 
    { testname="test18", description="bfs with adjacent vertices" },
    { testname="test19", description="bfs on disconnected graph"},
    { testname="test20", description="bfs artist not in graph"},
    { testname="test21", description="dfs stress test"},
    { testname="test22", description="not with an excluded artist missing from graph" },
    { testname="test23", description="not with exhausted exclusions", argv=["small.data"], ccizer_args={artists_file="small.data"} },
    { testname="test24", description="not with one exclusion (0)"},
    { testname="test25", description="not with one exclusion (1)"},
    { testname="test26", description="not with no exclusions"},
    { testname="test27", description="not with disconnected path", argv=["small.data"], ccizer_args={artists_file="small.data"} },
    { testname="test28", description="not excluding self"},
    { testname="test29", description="not with three exclusions"},
    { testname="test30", description="not stress test"},
    { testname="test31", description="bfs long path", argv=["test31.data"], ccizer_args={artists_file="test31.data"}},
    { testname="test32", description="stress test all commands" }
]

[SixDegrees_alternate_input]
tests = [
    { testname="test33", description="command file test dfs", argv=["artists.txt", "test33.commands"] },
    { testname="test34", description="command file and output file test", argv=["artists.txt", "test33.commands", "#{testname}"], ccize_stdout=false, ccize_ofiles=true },    
]


# [invalid_file_tests]
# exitcodepass = 1
# tests = [    
#     { testname="test01", description="Incorrect number of args", argv=[] },
#     { testname="test02", description="Invalid datafile", argv=["badfile"] },
#     { testname="test03", description="Invalid command file", argv=["artists.txt", "badfile" ] }
# ]

# [other_tests]
# argv  = ["artists.txt"]
# tests = [    
#     { testname="test05", description="Program terminates with quit command" },
# ]

# [CollabGraph_tests]
# executable = "#{testname}"
# argv  = ["artists.txt"]
# tests = [
#     { testname="test07", description="get_vertex_neighbors() - No Neighbors" },
#     { testname="test08", description="get_vertex_neighbors() - One Neighbor" },
#     { testname="test09", description="get_vertex_neighbors() - Multiple Neighbors" },
#     { testname="test10", description="report_path() - Self-Collaboration" },
#     { testname="test11", description="report_path() - Valid Path Short" },
#     { testname="test12", description="report_path() - No Path" },
#     { testname="test13", description="report_path() - Artists to non-existing Artist", exitcodepass=6, valgrind=false }, 
#     { testname="test14", description="report_path() - Stress Test" }   
# ]
#     { testname="test15", description="get_vertex_neighbors() - No Neighbors" },
#     { testname="test16", description="get_vertex_neighbors() - One Neighbor" },
#     { testname="test17", description="get_vertex_neighbors() - Multiple Neighbors" },
#     { testname="test18", description="report_path() - Self-Collaboration" },
#     { testname="test19", description="report_path() - Valid Path Short" },
#     { testname="test20", description="report_path() - No Path" },
#     { testname="test21", description="report_path() - Artists to non-existing Artist", exitcodepass=6, valgrind=false }, 
#     { testname="test22", description="report_path() - Stress Test" }   
#     { testname="test23", description="get_vertex_neighbors() - No Neighbors" },
#     { testname="test24", description="get_vertex_neighbors() - One Neighbor" },
#     { testname="test25", description="get_vertex_neighbors() - Multiple Neighbors" },
#     { testname="test26", description="report_path() - Self-Collaboration" },
#     { testname="test27", description="report_path() - Valid Path Short" },
#     { testname="test28", description="report_path() - No Path" },
#     { testname="test29", description="report_path() - Artists to non-existing Artist", exitcodepass=6, valgrind=false }, 
#     { testname="test30", description="report_path() - Stress Test" } 
