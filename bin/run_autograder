#!/bin/bash 

SOURCE_DIR="/autograder/source"
REPO_ROOT="$SOURCE_DIR/course-repo"
ASSIGNMENT_TITLE="${ASSIGNMENT_TITLE// /_}" # replace spaces with underscores

CONFIG="${SOURCE_DIR}/config.toml"
ASSIGN_ROOT=`cat ${CONFIG} | tomlq ".repo.ASSIGN_ROOT" | tr -d '"'`
ASSIGN_AUTOGRADING_SUBFOLDER=`cat ${CONFIG} | tomlq ".repo.ASSIGN_AUTOGRADING_SUBFOLDER" | tr -d '"'`
AUTOGRADING_ROOT=`cat ${CONFIG} | tomlq ".repo.AUTOGRADING_ROOT" | tr -d '"'`

# go to the repo and pull; hide output from students put put in log if needed
cd $REPO_ROOT
git pull -f > $SOURCE_DIR/PULL_LOG 2>&1

rc=$?
if [ $rc -ne 0 ]; then 
    echo "Repo failed to pull correctly. See log below. Exiting"
    cat "$SOURCE_DIR/PULL_LOG"
    exit $rc
fi

# make bin/ available to autograder (diff-so-pretty, make_gradescope_results.py, etc.)
export PATH=$PATH:$REPO_ROOT/$AUTOGRADING_ROOT/bin
export PATH=$PATH:$REPO_ROOT/$AUTOGRADING_ROOT/lib

# copy the autograding files for this assignment
cp -r $REPO_ROOT/$ASSIGN_ROOT/$ASSIGNMENT_TITLE/$ASSIGN_AUTOGRADING_SUBFOLDER/* /autograder/

# validate our submission is number <= X, and tokens, if we're using them. 
validate_submission

rc=$?
if [ $rc -ne 0 ]; then
    echo "Submission validation failed. Exiting."
    exit $rc
fi

# make all of our files unavailable to the student group, but still traversable
chmod -R 771 $SOURCE_DIR

# students still need to access the autograde program
chmod 775 $REPO_ROOT/$AUTOGRADING_ROOT/bin/autograde*

# run the autograder!
cd /autograder/

# if testrunner.sh doesn't exist, just run `autograde`
if [ ! -f "testrunner.sh" ]; then
    autograde
else 
    chmod +x testrunner.sh
    ./testrunner.sh
fi

# make results and put them in /autograder/results/results.json
make_gradescope_results.py

if [ -f "make_leaderboard.py" ]; then
    python3 make_leaderboard.py
fi
