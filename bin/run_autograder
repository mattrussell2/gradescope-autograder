#!/bin/bash 

SOURCE_DIR="/autograder/source"
REPO_ROOT="$SOURCE_DIR/course-repo"
ASSIGNMENT_TITLE="${ASSIGNMENT_TITLE// /_}" # replace spaces with underscores

# .zip setup requires us to reset Python version.
# NOTE! If this is done in setup.sh, it breaks the container when it boots up. Yuck.
if [[ $(python3 --version) == "Python 3.6.9" ]]; then
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
    update-alternatives --set python3 /usr/bin/python3.9
fi

# load the config variables
source $SOURCE_DIR/autograder_config.ini

# go to the repo and pull; hide output from students put put in log if needed
cd    $REPO_ROOT
git   pull -f > $SOURCE_DIR/PULL_LOG 2>&1

# make bin/ available to autograder (diff-so-pretty, make_gradescope_results.py, etc.)
export PATH=$PATH:$REPO_ROOT/$AUTOGRADING_ROOT/bin
export PATH=$PATH:$REPO_ROOT/$AUTOGRADING_ROOT/lib

# copy the autograding files for this assignment
cp -r $REPO_ROOT/$ASSIGN_ROOT/$ASSIGNMENT_TITLE/$ASSIGN_AUTOGRADING_SUBFOLDER/* /autograder/

validate_submission

rc=$?
if [ $rc -ne 0 ]; then
    echo "Submission validation failed. Exiting."
    exit $rc
fi

# remove this file so there is no chance of student code accessing the postgres URL
rm /autograder/source/token_config.ini

# run the autograder!
cd /autograder/
chmod +x testrunner.sh
./testrunner.sh $@

# make results and put them in /autograder/results/results.json
make_gradescope_results.py

if [ -f "make_leaderboard.py" ]; then
    python3 make_leaderboard.py
fi
